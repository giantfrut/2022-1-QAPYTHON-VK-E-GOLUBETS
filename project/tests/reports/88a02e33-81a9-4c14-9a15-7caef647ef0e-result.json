{"name": "test_add_user_correct[user3]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 210 == 200\n +  where 210 = <Response [210]>.status_code", "trace": "self = <test_api.TestApiRegistration object at 0x1076f85b0>\nauthorized_api = <Response [200]>\nuser = User(name='362NZdVzkE', surname='79nZili7PF', middle_name='ZsZhJPIdS0', username='ri2RdvjEDU1gvUit', password='c47nuAr...VlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a', email='VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', access=1)\n\n    @allure.description(\n        \"\"\"\n        Test positive add user\n        \"\"\"\n    )\n    @pytest.mark.parametrize(\n        \"user\",\n        [\n            (Builder.user(username_length=15, password=\"t\", email=\"t@u.ru\")),\n            (Builder.user(username_length=15, password=\"t\", email=\"t1@u.ru\")),\n            (Builder.user(username_length=6, password_length=10, email_length=10)),\n            (Builder.user(username_length=16, password_length=255, email_length=64)),\n            (Builder.user(username_length=10, password_length=255, email_length=10))\n        ]\n    )\n    def test_add_user_correct(self, authorized_api, user):\n        resp = self.api_client.add_user(user)\n    \n        assert resp.json()['detail'] == 'User was added'\n        assert self.mysql_client.select_db(user.username)\n>       assert resp.status_code == 200  # код 210\nE       assert 210 == 200\nE        +  where 210 = <Response [210]>.status_code\n\napi_tests/test_api.py:59: AssertionError"}, "description": "\n        Test positive add user \n        ", "steps": [{"name": "API add new user: User(name='362NZdVzkE', surname='79nZili7PF', middle_name='ZsZhJPIdS0', username='ri2RdvjEDU1gvUit', password='c47nuArhkB790EoUYFrgHk9xta1tZEb0cX3AsLM24l7l61FPt5ToA2Bt8MzDwBsFyKdKsr17OS1seWARerBZUABmVlnHqBOxqFeC9cQTpakOCae4cNAr7L7aQI7YHVSois6POGI89nIlLYGi5yBizv12CYOHwM4cp9BegS0PbeUxEkaJnKbAxE02W7mbwgrgYx9lro05HQyyvVf1X8cF2QbAO0CTAuVlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a', email='VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', access=1)", "status": "passed", "steps": [{"name": "Send 'POST' request to 'api/user', json: {'name': '362NZdVzkE', 'surname': '79nZili7PF', 'middlename': 'ZsZhJPIdS0', 'username': 'ri2RdvjEDU1gvUit', 'email': 'VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', 'password': 'c47nuArhkB790EoUYFrgHk9xta1tZEb0cX3AsLM24l7l61FPt5ToA2Bt8MzDwBsFyKdKsr17OS1seWARerBZUABmVlnHqBOxqFeC9cQTpakOCae4cNAr7L7aQI7YHVSois6POGI89nIlLYGi5yBizv12CYOHwM4cp9BegS0PbeUxEkaJnKbAxE02W7mbwgrgYx9lro05HQyyvVf1X8cF2QbAO0CTAuVlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a'}", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "files", "value": "None"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'name': '362NZdVzkE', 'surname': '79nZili7PF', 'middlename': 'ZsZhJPIdS0', 'username': 'ri2RdvjEDU1gvUit', 'email': 'VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', 'password': 'c47nuArhkB790EoUYFrgHk9xta1tZEb0cX3AsLM24l7l61FPt5ToA2Bt8MzDwBsFyKdKsr17OS1seWARerBZUABmVlnHqBOxqFeC9cQTpakOCae4cNAr7L7aQI7YHVSois6POGI89nIlLYGi5yBizv12CYOHwM4cp9BegS0PbeUxEkaJnKbAxE02W7mbwgrgYx9lro05HQyyvVf1X8cF2QbAO0CTAuVlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a'}"}, {"name": "params", "value": "None"}, {"name": "jsonify", "value": "False"}], "start": 1653323186603, "stop": 1653323186664}], "parameters": [{"name": "user", "value": "User(name='362NZdVzkE', surname='79nZili7PF', middle_name='ZsZhJPIdS0', username='ri2RdvjEDU1gvUit', password='c47nuArhkB790EoUYFrgHk9xta1tZEb0cX3AsLM24l7l61FPt5ToA2Bt8MzDwBsFyKdKsr17OS1seWARerBZUABmVlnHqBOxqFeC9cQTpakOCae4cNAr7L7aQI7YHVSois6POGI89nIlLYGi5yBizv12CYOHwM4cp9BegS0PbeUxEkaJnKbAxE02W7mbwgrgYx9lro05HQyyvVf1X8cF2QbAO0CTAuVlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a', email='VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', access=1)"}], "start": 1653323186603, "stop": 1653323186664}], "parameters": [{"name": "user", "value": "User(name='362NZdVzkE', surname='79nZili7PF', middle_name='ZsZhJPIdS0', username='ri2RdvjEDU1gvUit', password='c47nuArhkB790EoUYFrgHk9xta1tZEb0cX3AsLM24l7l61FPt5ToA2Bt8MzDwBsFyKdKsr17OS1seWARerBZUABmVlnHqBOxqFeC9cQTpakOCae4cNAr7L7aQI7YHVSois6POGI89nIlLYGi5yBizv12CYOHwM4cp9BegS0PbeUxEkaJnKbAxE02W7mbwgrgYx9lro05HQyyvVf1X8cF2QbAO0CTAuVlRr1ojdmJ1D0tzA3Htw9Hz9qV2vARM5a', email='VYJhevxDd1DqPBkGdfDcWbK5bEBSPzmdqGgjmkKN8dGVG0stXQUFIR0GH4L@r.ru', access=1)"}], "start": 1653323186603, "stop": 1653323186667, "uuid": "c9e6af73-0443-48d3-8a82-cdce76177eea", "historyId": "c4962317799f4bcb5e8d4e07f886846f", "testCaseId": "522383399e5c9733ccd9cf04c814a953", "fullName": "tests.api_tests.test_api.TestApiRegistration#test_add_user_correct", "labels": [{"name": "feature", "value": "API registration tests"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiRegistration"}, {"name": "host", "value": "MacBook-Air-Evgenii.local"}, {"name": "thread", "value": "32146-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.test_api"}]}