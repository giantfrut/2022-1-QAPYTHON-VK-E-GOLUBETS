{"name": "test_add_user_incorrect[user0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "self = <test_api.TestApiRegistration object at 0x1076f8760>\nauthorized_api = <Response [200]>\nuser = User(name='J4JZemfs8F', surname='dB6BkBiELk', middle_name='6F5n0NHfab', username='HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9...uxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', password='t1udLz0P8B', email='K3RXd@r.ru', access=1)\n\n    @allure.description(\n        \"\"\"\n        Test negative add user\n        \"\"\"\n    )\n    @pytest.mark.parametrize(\n        \"user\",\n        [\n            (Builder.user(username_length=256, password_length=10, email_length=10)),  # пустой пользователь баг\n            (Builder.user(username=' ', password=' ', email=' ')),\n            (Builder.user(username_length=10, password_length=256, email_length=128))\n        ]\n    )\n    def test_add_user_incorrect(self, authorized_api, user):\n        resp = self.api_client.add_user(user)\n        assert resp.json()['detail'] != f'User was added'\n        assert self.mysql_client.select_db(user.username) is None\n>       assert resp.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\napi_tests/test_api.py:78: AssertionError"}, "description": "\n        Test negative add user \n        ", "steps": [{"name": "API add new user: User(name='J4JZemfs8F', surname='dB6BkBiELk', middle_name='6F5n0NHfab', username='HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9Sq0HGvbor776nSHmYGjshLcGgPWngeWJUt31a1htqnpBywFFfp1LyBC4ZjdIWyHD2HAth617bhGgGfNiojut4AYVncKbb1HiSUBaz2825rTCS7kjh3Fqs0fCsWZaZLDczXilPOWNKJ6bNheHjaNkgB8w8o2LuxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', password='t1udLz0P8B', email='K3RXd@r.ru', access=1)", "status": "passed", "steps": [{"name": "Send 'POST' request to 'api/user', json: {'name': 'J4JZemfs8F', 'surname': 'dB6BkBiELk', 'middlename': '6F5n0NHfab', 'username': 'HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9Sq0HGvbor776nSHmYGjshLcGgPWngeWJUt31a1htqnpBywFFfp1LyBC4ZjdIWyHD2HAth617bhGgGfNiojut4AYVncKbb1HiSUBaz2825rTCS7kjh3Fqs0fCsWZaZLDczXilPOWNKJ6bNheHjaNkgB8w8o2LuxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', 'email': 'K3RXd@r.ru', 'password': 't1udLz0P8B'}", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "files", "value": "None"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'name': 'J4JZemfs8F', 'surname': 'dB6BkBiELk', 'middlename': '6F5n0NHfab', 'username': 'HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9Sq0HGvbor776nSHmYGjshLcGgPWngeWJUt31a1htqnpBywFFfp1LyBC4ZjdIWyHD2HAth617bhGgGfNiojut4AYVncKbb1HiSUBaz2825rTCS7kjh3Fqs0fCsWZaZLDczXilPOWNKJ6bNheHjaNkgB8w8o2LuxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', 'email': 'K3RXd@r.ru', 'password': 't1udLz0P8B'}"}, {"name": "params", "value": "None"}, {"name": "jsonify", "value": "False"}], "start": 1653323186794, "stop": 1653323186851}], "parameters": [{"name": "user", "value": "User(name='J4JZemfs8F', surname='dB6BkBiELk', middle_name='6F5n0NHfab', username='HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9Sq0HGvbor776nSHmYGjshLcGgPWngeWJUt31a1htqnpBywFFfp1LyBC4ZjdIWyHD2HAth617bhGgGfNiojut4AYVncKbb1HiSUBaz2825rTCS7kjh3Fqs0fCsWZaZLDczXilPOWNKJ6bNheHjaNkgB8w8o2LuxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', password='t1udLz0P8B', email='K3RXd@r.ru', access=1)"}], "start": 1653323186794, "stop": 1653323186851}], "parameters": [{"name": "user", "value": "User(name='J4JZemfs8F', surname='dB6BkBiELk', middle_name='6F5n0NHfab', username='HIbX4DHLn4xpAjWcWhUXHyTBQKqbDxx8YjZ9Sq0HGvbor776nSHmYGjshLcGgPWngeWJUt31a1htqnpBywFFfp1LyBC4ZjdIWyHD2HAth617bhGgGfNiojut4AYVncKbb1HiSUBaz2825rTCS7kjh3Fqs0fCsWZaZLDczXilPOWNKJ6bNheHjaNkgB8w8o2LuxMhTy9tGWuA98tEt5Q1PGbyDyaxN38z8guFiFik3274HKVKxKevwm2TJIBLlPDZ', password='t1udLz0P8B', email='K3RXd@r.ru', access=1)"}], "start": 1653323186794, "stop": 1653323186856, "uuid": "ee4aac76-dc00-4cde-902c-d2c55445e362", "historyId": "c3fcd2e5ae7ca9ed099bd05e6762edf8", "testCaseId": "f645c5e3d20691e6ff6973317c1838fd", "fullName": "tests.api_tests.test_api.TestApiRegistration#test_add_user_incorrect", "labels": [{"name": "feature", "value": "API registration tests"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiRegistration"}, {"name": "host", "value": "MacBook-Air-Evgenii.local"}, {"name": "thread", "value": "32146-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.test_api"}]}