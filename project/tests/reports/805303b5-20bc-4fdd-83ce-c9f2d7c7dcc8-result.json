{"name": "test_add_user_incorrect[user2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "self = <test_api.TestApiRegistration object at 0x1076f8bb0>\nauthorized_api = <Response [200]>\nuser = User(name='3jxvtdgdEu', surname='2KZQusBr0j', middle_name='69BX2fJErU', username='I4F50XfzLs', password='PXnOiNTrXcvfz...V6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', access=1)\n\n    @allure.description(\n        \"\"\"\n        Test negative add user\n        \"\"\"\n    )\n    @pytest.mark.parametrize(\n        \"user\",\n        [\n            (Builder.user(username_length=256, password_length=10, email_length=10)),  # пустой пользователь баг\n            (Builder.user(username=' ', password=' ', email=' ')),\n            (Builder.user(username_length=10, password_length=256, email_length=128))\n        ]\n    )\n    def test_add_user_incorrect(self, authorized_api, user):\n        resp = self.api_client.add_user(user)\n        assert resp.json()['detail'] != f'User was added'\n        assert self.mysql_client.select_db(user.username) is None\n>       assert resp.status_code == 400\nE       assert 500 == 400\nE        +  where 500 = <Response [500]>.status_code\n\napi_tests/test_api.py:78: AssertionError"}, "description": "\n        Test negative add user \n        ", "steps": [{"name": "API add new user: User(name='3jxvtdgdEu', surname='2KZQusBr0j', middle_name='69BX2fJErU', username='I4F50XfzLs', password='PXnOiNTrXcvfzO42qxSwrlqaVZLt2DxqfLuhQ5TJBRZI5cSCVOYPG2EVpnkExjI8cUsA7mPP4tqVdOyobtaNIUHOkAVnnOoBR1uyOD9ptCzfhKAU7FSd9meNMTwlY5mzyM4Mm4UGxpLuLLbNjHoUcWKV2gEAFX1fD7gb81EBmgzZcdj3IX1JL8Kdzu1SVqvix5ghhFwaMDF4xDar7pBNcvpyk94TFYc3Btt7ftGUrxBfi8DgIAJFwr19RgsNr1Vb', email='0fl5SlfEBBL3kUC9QRXtxV6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', access=1)", "status": "passed", "steps": [{"name": "Send 'POST' request to 'api/user', json: {'name': '3jxvtdgdEu', 'surname': '2KZQusBr0j', 'middlename': '69BX2fJErU', 'username': 'I4F50XfzLs', 'email': '0fl5SlfEBBL3kUC9QRXtxV6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', 'password': 'PXnOiNTrXcvfzO42qxSwrlqaVZLt2DxqfLuhQ5TJBRZI5cSCVOYPG2EVpnkExjI8cUsA7mPP4tqVdOyobtaNIUHOkAVnnOoBR1uyOD9ptCzfhKAU7FSd9meNMTwlY5mzyM4Mm4UGxpLuLLbNjHoUcWKV2gEAFX1fD7gb81EBmgzZcdj3IX1JL8Kdzu1SVqvix5ghhFwaMDF4xDar7pBNcvpyk94TFYc3Btt7ftGUrxBfi8DgIAJFwr19RgsNr1Vb'}", "status": "passed", "parameters": [{"name": "method", "value": "'POST'"}, {"name": "location", "value": "'api/user'"}, {"name": "headers", "value": "{'Content-Type': 'application/json'}"}, {"name": "files", "value": "None"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'name': '3jxvtdgdEu', 'surname': '2KZQusBr0j', 'middlename': '69BX2fJErU', 'username': 'I4F50XfzLs', 'email': '0fl5SlfEBBL3kUC9QRXtxV6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', 'password': 'PXnOiNTrXcvfzO42qxSwrlqaVZLt2DxqfLuhQ5TJBRZI5cSCVOYPG2EVpnkExjI8cUsA7mPP4tqVdOyobtaNIUHOkAVnnOoBR1uyOD9ptCzfhKAU7FSd9meNMTwlY5mzyM4Mm4UGxpLuLLbNjHoUcWKV2gEAFX1fD7gb81EBmgzZcdj3IX1JL8Kdzu1SVqvix5ghhFwaMDF4xDar7pBNcvpyk94TFYc3Btt7ftGUrxBfi8DgIAJFwr19RgsNr1Vb'}"}, {"name": "params", "value": "None"}, {"name": "jsonify", "value": "False"}], "start": 1653323186982, "stop": 1653323187039}], "parameters": [{"name": "user", "value": "User(name='3jxvtdgdEu', surname='2KZQusBr0j', middle_name='69BX2fJErU', username='I4F50XfzLs', password='PXnOiNTrXcvfzO42qxSwrlqaVZLt2DxqfLuhQ5TJBRZI5cSCVOYPG2EVpnkExjI8cUsA7mPP4tqVdOyobtaNIUHOkAVnnOoBR1uyOD9ptCzfhKAU7FSd9meNMTwlY5mzyM4Mm4UGxpLuLLbNjHoUcWKV2gEAFX1fD7gb81EBmgzZcdj3IX1JL8Kdzu1SVqvix5ghhFwaMDF4xDar7pBNcvpyk94TFYc3Btt7ftGUrxBfi8DgIAJFwr19RgsNr1Vb', email='0fl5SlfEBBL3kUC9QRXtxV6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', access=1)"}], "start": 1653323186981, "stop": 1653323187039}], "parameters": [{"name": "user", "value": "User(name='3jxvtdgdEu', surname='2KZQusBr0j', middle_name='69BX2fJErU', username='I4F50XfzLs', password='PXnOiNTrXcvfzO42qxSwrlqaVZLt2DxqfLuhQ5TJBRZI5cSCVOYPG2EVpnkExjI8cUsA7mPP4tqVdOyobtaNIUHOkAVnnOoBR1uyOD9ptCzfhKAU7FSd9meNMTwlY5mzyM4Mm4UGxpLuLLbNjHoUcWKV2gEAFX1fD7gb81EBmgzZcdj3IX1JL8Kdzu1SVqvix5ghhFwaMDF4xDar7pBNcvpyk94TFYc3Btt7ftGUrxBfi8DgIAJFwr19RgsNr1Vb', email='0fl5SlfEBBL3kUC9QRXtxV6drWM6rHaZ6n1NLBMMMLSZ3OivQ52bgxKMs07zilzHiXyop497oLEFiHiaBtqlAZdgex9rimsxM4sw7UtvWtzcJzSB5Wc3MNuBLdU@r.ru', access=1)"}], "start": 1653323186981, "stop": 1653323187044, "uuid": "ee34dbc2-f368-4cdb-8736-bec2ec55b2d1", "historyId": "ffb2d6c1440621b811d3586e19edf2e6", "testCaseId": "f645c5e3d20691e6ff6973317c1838fd", "fullName": "tests.api_tests.test_api.TestApiRegistration#test_add_user_incorrect", "labels": [{"name": "feature", "value": "API registration tests"}, {"name": "tag", "value": "API"}, {"name": "parentSuite", "value": "tests.api_tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiRegistration"}, {"name": "host", "value": "MacBook-Air-Evgenii.local"}, {"name": "thread", "value": "32146-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_tests.test_api"}]}